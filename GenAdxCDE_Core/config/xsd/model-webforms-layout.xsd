<?xml version="1.0" encoding="UTF-8"?>
<!--?xml-stylesheet type="text/xsl" href="WikiDoc.xsl"?-->
<xs:schema targetNamespace="urn:schemas-nreco:webforms:layout:v2"
			xmlns="urn:schemas-nreco:webforms:layout:v2"
			elementFormDefault="qualified"
			xmlns:xs="http://www.w3.org/2001/XMLSchema"
			xmlns:vs="http://schemas.microsoft.com/Visual-Studio-Intellisense">
	<xs:annotation>
		<xs:documentation>NReco Layout DSM Documentation</xs:documentation>
	</xs:annotation>

	<xs:element name="model">
		<xs:complexType>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="views"/>
				<xs:element ref="settings"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="views">
		<xs:complexType>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="viewGroup" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="settings">
		<xs:complexType>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:element name="services" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence minOccurs="0" maxOccurs="unbounded">
							<xs:element name="dalc" minOccurs="0">
								<xs:complexType>
									<xs:attribute name="name" type="xs:string" use="required"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="datasetfactory" minOccurs="0">
								<xs:complexType>
									<xs:attribute name="name" type="xs:string" use="required"/>
								</xs:complexType>								
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>

				<xs:element name="list" minOccurs="0">
					<xs:complexType>

						<xs:sequence minOccurs="0" maxOccurs="unbounded">
							<xs:element name="styles" type="listStylesType" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element name="pager" minOccurs="0">
								<xs:complexType>
									<xs:sequence minOccurs="0">
										<xs:element name="template" type="xs:string"/>
									</xs:sequence>
									<xs:attribute name="pagesize" type="xs:string" use="optional"/>
									<xs:attribute name="show" use="optional">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="always"/>
												<xs:enumeration value="ifpagingpossible"/>
												<xs:enumeration value="no"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
							<xs:element name="insertdataitem" minOccurs="0" maxOccurs="1">
								<xs:complexType>
									<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>

						<xs:attribute name="datakey" type="xs:string" use="optional"/>
					</xs:complexType>
				</xs:element>

				<xs:element name="form" minOccurs="0">
					<xs:complexType>
						<xs:sequence minOccurs="0" maxOccurs="unbounded">
							<xs:element name="header" minOccurs="0" maxOccurs="unbounded" type="formHeaderFooterType"/>
							<xs:element name="footer" minOccurs="0" maxOccurs="unbounded" type="formHeaderFooterType"/>
							<xs:element name="styles" type="formStylesType" minOccurs="0"/>

							<xs:element name="insertmodecondition" minOccurs="0" maxOccurs="1">
								<xs:complexType>
									<xs:group ref="expressionGroup"/>
								</xs:complexType>
							</xs:element>

							<xs:element name="field" minOccurs="0" maxOccurs="1">
								<xs:complexType>
									<xs:sequence minOccurs="0" maxOccurs="unbounded">
										<xs:element name="caption">
											<xs:complexType>
												<xs:attribute name="suffix" use="optional" type="xs:string"/>
												<xs:attribute name="required" use="optional" type="xs:string"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="datakey" type="xs:string" use="optional"/>
					</xs:complexType>
				</xs:element>
				
				<xs:element name="linkbutton" minOccurs="0">
					<xs:complexType>
						<xs:attribute name="prefix" type="xs:string" use="optional"/>
						<xs:attribute name="suffix" type="xs:string" use="optional"/>
						<xs:attribute name="class" type="xs:string" use="optional"/>
					</xs:complexType>
				</xs:element>

			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:group name="viewGroup">
		<xs:annotation><xs:documentation>View</xs:documentation></xs:annotation>
		<xs:choice>
			<xs:element ref="view" minOccurs="0" maxOccurs="unbounded" />
		</xs:choice>
	</xs:group>

	<xs:element name="view">
		<xs:annotation>
			<xs:documentation>Basic ASP.NET Web Forms view.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="datasources" minOccurs="0" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>View data sources.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:group ref="datasourceGroup" maxOccurs="unbounded"/>
					</xs:complexType>
				</xs:element>
				<!-- actions -->
				<xs:element name="action" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>View actions.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence minOccurs="1" maxOccurs="unbounded">
							<xs:group ref="actionOperationGroup"/>
						</xs:sequence>
						<xs:attribute name="name" use="required" type="viewActionNameType">
							<xs:annotation>
								<xs:documentation>Action name determines when it should be executed.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>

				<!-- custom commands -->
				<xs:element name="command" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence minOccurs="1" maxOccurs="unbounded">
							<xs:group ref="actionOperationGroup"/>
						</xs:sequence>
						<xs:attribute name="name" use="required" type="xs:string"/>
					</xs:complexType>
				</xs:element>

				<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="name" use="required" type="xs:string">
				<xs:annotation>
					<xs:documentation>Unique view name. It can be used for view route, for instance.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="sessiondatacontext" use="optional" type="xs:boolean"/>
			<xs:anyAttribute processContents="skip"/>
		</xs:complexType>
	</xs:element>

	<xs:simpleType name="viewActionNameType">
		<xs:union memberTypes="xs:string">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="load"/>
					<xs:enumeration value="prerender"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>


	<xs:group name="datasourceGroup">
		<xs:annotation><xs:documentation>Data Source</xs:documentation></xs:annotation>
		<xs:choice>
			<xs:element name="provider">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="1">
						<xs:element name="context">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="id" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Data Source ID. It should be unique in the view scope.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="from" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Provider service name.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="dalc">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="condition" type="xs:string" minOccurs="0" maxOccurs="1"/>
						<xs:element name="action" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="actionOperationGroup" minOccurs="0" maxOccurs="unbounded"/>
								<xs:attribute name="name" use="required">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="selecting"/>
											<xs:enumeration value="selected"/>
											<xs:enumeration value="inserting"/>
											<xs:enumeration value="inserted"/>
											<xs:enumeration value="updating"/>
											<xs:enumeration value="updated"/>
											<xs:enumeration value="deleting"/>
											<xs:enumeration value="deleted"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="relation" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence minOccurs="0" maxOccurs="1">
									<xs:element name="mapper">
										<xs:complexType>
											<xs:attribute name="table" type="xs:string" use="required"/>
											<xs:attribute name="fromfield" type="xs:string" use="required"/>
											<xs:attribute name="tofield" type="xs:string" use="required"/>
											<xs:attribute name="positionfield" type="xs:string" use="optional"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="name" type="xs:string" use="required"/>
								<xs:attribute name="datakeyname" type="xs:string" use="required"/>
								<xs:attribute name="mapper" type="xs:string" use="optional"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="id" type="xs:string" use="required">
						<xs:annotation><xs:documentation>Data Source ID. It should be unique in the view scope.</xs:documentation></xs:annotation>
					</xs:attribute>
					<xs:attribute name="tablename" type="xs:string" use="required">
						<xs:annotation><xs:documentation>Table name for select/update/insert/delete operations.</xs:documentation></xs:annotation>
					</xs:attribute>
					<xs:attribute name="selecttablename" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Table name for select operation.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
          <xs:attribute name="datakeynames" type="xs:string" use="optional"/>
					<xs:attribute name="autoincrementnames" type="xs:string" use="optional"/>
          <xs:attribute name="condition" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Data condition (relex syntax).</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="from" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>DALC component name.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>

	<xs:complexType name="fieldRendererType">
		<xs:attribute name="name" use="required" type="xs:string">
			<xs:annotation>
				<xs:documentation>Field name (usually it is refers to database table field name or object property).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="format" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>Format expression.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="lookup" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>Provider name that should be used as 'lookup'.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:group name="aspnetRendererGroup">
		<xs:annotation><xs:documentation>Renderer</xs:documentation></xs:annotation>
		<xs:choice>
			<xs:element name="field" type="fieldRendererType"/>
			<xs:element name="list" type="baseListType">
				<xs:annotation>
					<xs:documentation>Generic ASP.NET ListView</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="form" type="baseFormType">
				<xs:annotation>
					<xs:documentation>Generic ASP.NET FormView</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="form-section" minOccurs="0">
				<xs:complexType>
					<xs:group ref="formFieldGroup" maxOccurs="unbounded"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="actionform">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="styles" type="formStylesType" minOccurs="0" maxOccurs="1"/>
						<xs:element name="action" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence minOccurs="1" maxOccurs="unbounded">
									<xs:group ref="actionOperationGroup"/>
								</xs:sequence>
								<xs:attribute name="name" use="required">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="initialize"/>
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="header" minOccurs="0">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
						<xs:group ref="formFieldGroup" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element name="footer" minOccurs="0">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="name" use="optional" type="xs:string"/>
					<xs:attribute name="viewstate" use="optional" type="xs:boolean"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="usercontrol">
				<xs:annotation>
					<xs:documentation>Custom ASP.NET user control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="property" minOccurs="0">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
								<xs:attribute name="name" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="name" use="required" type="xs:string"/>
					<xs:attribute name="src" use="required" type="xs:string"/>
					<xs:anyAttribute namespace="##any"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="repeater">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="header" type="xs:string" minOccurs="0"/>
						<xs:element name="footer" type="xs:string" minOccurs="0"/>
						<xs:element name="separator" type="xs:string" minOccurs="0"/>
						<xs:element name="item" minOccurs="0">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="data" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="separator" use="optional" type="xs:string"/>
					<xs:attribute name="datasource" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="ul">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="item" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="data" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="datasource" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="ol">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="item" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup"  minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="datasource" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>

			<xs:element name="updatepanel">
				<xs:annotation>
					<xs:documentation>ASP.NET Update Panel.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:group ref="aspnetRendererGroup"/>
					</xs:sequence>
          <xs:attribute name="refresh" use="optional">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="conditional"/>
                <xs:enumeration value="always"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="expression">
				<xs:complexType>
					<xs:group ref="expressionGroup"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="linkbutton">
				<xs:annotation>
					<xs:documentation>ASP.NET Link Button.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="caption" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="arg" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="caption" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Fixed caption</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="confirm" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Confirmation text</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="command" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>Command name (depends from context). Possible values for linkbuttons inside "form"/"list" are "insert", "edit", "cancel", etc.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="validate" type="xs:boolean" use="optional">
						<xs:annotation>
							<xs:documentation>Enables "form" validation for this linkbutton</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="class" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="link">
				<xs:annotation>
					<xs:documentation>HTML link.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="url" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="caption" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="1" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="url" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Fixed url</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="caption" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Fixed caption</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="target" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="blank"/>
								<xs:enumeration value="parent"/>
								<xs:enumeration value="self"/>
								<xs:enumeration value="top"/>
								<xs:enumeration value="popup"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="class" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>

			<xs:element name="dialoglink">
				<xs:annotation>
					<xs:documentation>HTML link (iframe popup).</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="unbounded">
						<xs:element name="url" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="caption" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="dialog" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:sequence minOccurs="0">
									<xs:element name="caption" minOccurs="0" maxOccurs="1">
										<xs:complexType>
											<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="unbounded"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="caption" type="xs:string" use="optional"/>
								<xs:attribute name="width" type="xs:integer" use="optional"/>
								<xs:attribute name="height" type="xs:integer" use="optional"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="callback" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="command" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="url" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Fixed url</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="caption" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation>Fixed caption</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="class" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>

			<xs:element name="listdisplayindex">
				<xs:complexType></xs:complexType>
			</xs:element>
			<xs:element name="placeholder">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:element name="content" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="visible" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
							</xs:complexType>							
						</xs:element>
					</xs:sequence>
					<xs:attribute name="class" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="table">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="unbounded">
						<xs:element name="row">
							<xs:complexType>
								<xs:sequence minOccurs="1" maxOccurs="unbounded">
									<xs:element name="cell">
										<xs:complexType>
											<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
											<xs:attribute name="colspan" type="xs:int" use="optional"/>
											<xs:attribute name="width" type="xs:string" use="optional"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="class" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="newline">
				<xs:complexType></xs:complexType>
			</xs:element>
			<xs:element name="html">
				<xs:complexType mixed="true">
          <xs:sequence>
              <xs:any namespace="##any" processContents="lax"/>
          </xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="image">
				<xs:complexType>
					<xs:sequence minOccurs="1">
						<xs:element name="url" minOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="class" type="xs:string" use="optional"/>
					<xs:attribute name="width" type="xs:integer" use="optional"/>
					<xs:attribute name="height" type="xs:integer" use="optional"/>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>
	
	<xs:group name="formFieldEditorGroup">
		<xs:annotation>
			<xs:documentation>Editor</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="textbox">
				<xs:annotation>
					<xs:documentation>ASP.NET TextBox Control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="empty-is-null" type="xs:boolean" use="optional"/>
					<xs:attribute name="bind" use="optional" type="xs:boolean"/>
          <xs:attribute name="width" type="xs:string" use="optional"/>
					<xs:attribute name="prefix" type="xs:string" use="optional"/>
					<xs:attribute name="suffix" type="xs:string" use="optional"/>
					<xs:attribute name="format" type="xs:string" use="optional"/>
					<xs:attribute name="datatype" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="string"/>
								<xs:enumeration value="integer"/>
								<xs:enumeration value="decimal"/>
								<xs:enumeration value="double"/>
								<xs:enumeration value="datetime"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="placeholder" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="textarea">
				<xs:annotation>
					<xs:documentation>ASP.NET multiline TextBox Control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="bind" use="optional" type="xs:boolean"/>
					<xs:attribute name="rows" type="xs:integer" use="optional"/>
					<xs:attribute name="cols" type="xs:integer" use="optional"/>
					<xs:attribute name="empty-is-null" type="xs:boolean" use="optional"/>
					<xs:attribute name="width" type="xs:string" use="optional"/>
				</xs:complexType>				
			</xs:element>
			<xs:element name="textboxpassword">
				<xs:annotation>
					<xs:documentation>TextBox-based password editor</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="encrypter" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkbox">
				<xs:annotation>
					<xs:documentation>ASP.NET CheckBox Control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="bind" use="optional" type="xs:boolean"/>
					<xs:attribute name="text" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>			
			<xs:element name="dropdownlist">
				<xs:annotation>
					<xs:documentation>DropDownList Control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="lookup" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
								<xs:attribute name="name" use="required" type="xs:string"/>
								<xs:attribute name="text" use="required" type="xs:string"/>
								<xs:attribute name="value" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
            <xs:element name="notselected" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:attribute name="text" type="xs:string" use="optional"/>
                    <xs:attribute name="value" type="xs:string" use="optional"/>
                </xs:complexType>
            </xs:element>						
					</xs:sequence>
					<xs:attribute name="bind" use="optional" type="xs:boolean"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="radiobuttonlist">
				<xs:annotation>
					<xs:documentation>RadioButtonList Control</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:element name="lookup" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
								<xs:attribute name="name" use="required" type="xs:string"/>
								<xs:attribute name="text" use="required" type="xs:string"/>
								<xs:attribute name="value" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="notselected" minOccurs="0" maxOccurs="1">
								<xs:complexType>
										<xs:attribute name="text" type="xs:string" use="optional"/>
										<xs:attribute name="value" type="xs:string" use="optional"/>
								</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="repeat-direction" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="horizontal"/>
								<xs:enumeration value="vertical"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkboxlist">
				<xs:annotation>
					<xs:documentation>ASP.NET CheckBoxList-based relation editor.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="lookup" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
								<xs:attribute name="name" use="required" type="xs:string"/>
								<xs:attribute name="text" use="required" type="xs:string"/>
								<xs:attribute name="value" use="required" type="xs:string"/>
								<xs:attribute name="group" use="optional" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="group" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:attribute name="default" use="optional" type="xs:string"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="columns" use="optional" type="xs:integer"/>
					<xs:attribute name="layout" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="table"/>
								<xs:enumeration value="flow"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>

			<xs:element name="usercontrol" minOccurs="0">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="property" minOccurs="0">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
								<xs:attribute name="name" use="required" type="xs:string"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="name" type="xs:string" use="required"/>
					<xs:attribute name="src" type="xs:string" use="required"/>
					<xs:attribute name="bind" type="xs:boolean" use="optional"/>
					<xs:anyAttribute namespace="##any"/>
				</xs:complexType>
			</xs:element>
			
		</xs:choice>
	</xs:group>

	<xs:group name="formFieldValidatorGroup">
		<xs:annotation><xs:documentation>Validator</xs:documentation></xs:annotation>
		<xs:choice>
			<xs:element name="required" type="xs:string"/>
			<xs:element name="regex">
				<xs:complexType mixed="true">
					<xs:sequence minOccurs="0" maxOccurs="1">
						<xs:element name="expression">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="message" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="chooseone">
				<xs:complexType>
					<xs:attribute name="group" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="custom">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:element name="isvalid">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="message" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="maxlength" type="xs:integer"/>
      <xs:element name="decimal">
        <xs:complexType></xs:complexType>
      </xs:element>
      <xs:element name="email">
        <xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="message" type="xs:string" use="optional"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
      </xs:element>
      <xs:element name="url">
        <xs:complexType>
			<xs:attribute name="require-protocol" type="xs:boolean" use="optional"/>
        </xs:complexType>
      </xs:element>	  
    </xs:choice>
	</xs:group>

	<xs:complexType name="formSectionFieldType">
		<xs:complexContent>
			<xs:extension base="formFieldType">
				<xs:attribute name="layout" use="optional" type="formFieldLayoutType"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="formFieldType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="editor" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Editor for the field</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:group ref="formFieldEditorGroup"/>
						<xs:element name="validators" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:sequence minOccurs="0" maxOccurs="unbounded">
									<xs:group ref="formFieldValidatorGroup"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="caption" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Custom caption for the field</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:group ref="aspnetRendererGroup" minOccurs="1" maxOccurs="unbounded"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="renderer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Custom renderer for the field</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="hint" minOccurs="0" maxOccurs="1">
				<xs:complexType mixed="true">
					<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Context object member name for the field</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="caption" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Fixed caption</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="hint" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Field hint text</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="format" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>Format string for the field value (like '{0:d}')</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="lookup" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>"Lookup" provider name</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:simpleType name="formFieldLayoutType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="vertical"/>
			<xs:enumeration value="horizontal"/>
			<xs:enumeration value="raw"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:group name="formFieldGroup">
		<xs:choice>
			<xs:element name="field">
				<xs:annotation>
					<xs:documentation>Form field</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="formSectionFieldType">
							<xs:sequence minOccurs="0" maxOccurs="1">
								<xs:element name="visible" minOccurs="0" maxOccurs="1">
									<xs:complexType>
										<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
							<xs:attribute name="view" type="xs:boolean" use="optional">
								<xs:annotation>
									<xs:documentation>Enables field for view (readonly) form</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="edit" type="xs:boolean" use="optional">
								<xs:annotation>
									<xs:documentation>Enables field for edit form</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="add" type="xs:boolean" use="optional">
								<xs:annotation>
									<xs:documentation>Enables field for add form</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>

	<xs:simpleType name="formActionNameType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="inserted"/>
			<xs:enumeration value="inserting"/>
			<xs:enumeration value="deleting"/>
			<xs:enumeration value="deleted"/>
            <xs:enumeration value="updating"/>
            <xs:enumeration value="updated"/>
            <xs:enumeration value="cancel"/>
			<xs:enumeration value="initialize"/>
			<xs:enumeration value="databound"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="listActionNameType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="initialize"/>
			<xs:enumeration value="inserting"/>
			<xs:enumeration value="inserted"/>
			<xs:enumeration value="updating"/>
			<xs:enumeration value="updated"/>
			<xs:enumeration value="deleting"/>
			<xs:enumeration value="deleted"/>
			<xs:enumeration value="filter"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:group name="expressionGroup">
		<xs:annotation>
			<xs:documentation>Expression</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="route">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
					<xs:attribute name="name" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="datacontext">
				<xs:complexType>
					<xs:attribute name="name" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="dataitem">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="request">
				<xs:complexType>
					<xs:attribute name="name" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="routedata">
				<xs:complexType>
					<xs:attribute name="name" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="const" type="xs:string"/>
			<xs:element name="format">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="unbounded">
						<xs:group ref="expressionGroup"/>
					</xs:sequence>
					<xs:attribute name="str" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="field">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="control">
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="get">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="lambda">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:element name="expression" type="xs:string" minOccurs="1" maxOccurs="1"/>
						<xs:element name="context">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="lookup">
				<xs:complexType>
					<xs:choice minOccurs="1" maxOccurs="1">
						<xs:group ref="expressionGroup"/>
					</xs:choice>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="func">
				<xs:complexType>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:group ref="expressionGroup"/>
					</xs:choice>
					<xs:attribute name="name" type="xs:string" use="required"/>
					<xs:attribute name="cache" type="xs:boolean" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="dictionary" type="expressionDictionaryType"/>
			<xs:element name="eq">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="2" maxOccurs="2"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="not">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="and">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="unbounded"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="or">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="unbounded"/>
				</xs:complexType>
			</xs:element>

			<xs:element name="if">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="test" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="then" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="else" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="isempty">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="isinrole" type="xs:string">
				<xs:annotation>
					<xs:documentation>Checks context user role.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="code" type="xs:string">
				<xs:annotation>
					<xs:documentation>Custom C# code expression.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="listrowcount">
				<xs:annotation>
					<xs:documentation>List rows count value.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="listselectedkeys">
				<xs:annotation>
					<xs:documentation>List selected items keys data.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="formcurrentmode">
				<xs:annotation>
					<xs:documentation>Form current mode (ReadOnly/Insert/Edit).</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="emptyfallback">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="unbounded">
						<xs:group ref="expressionGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="label">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>

	<xs:group name="actionOperationGroup">
		<xs:annotation>
			<xs:documentation>Operation</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="redirect">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="0"/>
					<xs:attribute name="url" type="xs:string" use="optional"/>
					<xs:attribute name="mode" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="clientside"/>
								<xs:enumeration value="serverside"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="set">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="setdatacontext">
				<xs:annotation>
				  <xs:documentation>Sets given value in DataContext.</xs:documentation>
				</xs:annotation>			
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			
			<xs:element name="setformcurrentmode">
				<xs:annotation>
				  <xs:documentation>Sets form current mode</xs:documentation>
				</xs:annotation>			
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
					<xs:attribute name="mode" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="ReadOnly"/>
								<xs:enumeration value="Edit"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			
			<xs:element name="saveform">
				<xs:annotation>
				  <xs:documentation>Force form insert/update</xs:documentation>
				</xs:annotation>			
				<xs:complexType>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			
			<xs:element name="if">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="test" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="then" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="actionOperationGroup" minOccurs="1" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="else" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="actionOperationGroup" minOccurs="1" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="databind">
				<xs:complexType>
					<xs:group ref="controlInstanceExprGroup" minOccurs="0" maxOccurs="1"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="action">
				<xs:complexType>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:group ref="expressionGroup"/>
					</xs:choice>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="jscallback">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="1">
						<xs:element name="function">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="arg" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="close" type="xs:boolean" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="code" type="xs:string">
				<xs:annotation>
					<xs:documentation>Custom C# code expression.</xs:documentation>
				</xs:annotation>
			</xs:element>
    </xs:choice>
	</xs:group>

	<xs:group name="formActionOperationGroup">
		<xs:annotation>
			<xs:documentation>Form Operation</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="save" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType></xs:complexType>
			</xs:element>
			<xs:element name="loaddataitem" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType></xs:complexType>
			</xs:element>
			<xs:element name="setcontrol" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="0" maxOccurs="1"/>
					<xs:attribute name="name" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:group ref="actionOperationGroup" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:group>

	<xs:group name="controlInstanceExprGroup">
		<xs:choice>
			<xs:element name="list">
				<xs:complexType>
					<xs:attribute name="name" use="required" type="xs:string"/>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>

	<xs:complexType name="baseFormType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="styles" type="formStylesType" minOccurs="0" maxOccurs="1"/>
		
			<xs:element name="datasource" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="1">
						<xs:group ref="datasourceGroup" maxOccurs="1"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="insertmodecondition" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="expressionGroup"/>
				</xs:complexType>				
			</xs:element>
			
			<!-- actions -->
			<xs:element name="action" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="unbounded">
						<xs:group ref="formActionOperationGroup"/>
					</xs:sequence>
					<xs:attribute name="name" use="required" type="formActionNameType"/>
				</xs:complexType>
			</xs:element>

			<xs:element name="header" minOccurs="0" maxOccurs="unbounded" type="formHeaderFooterType"/>
			
			<!-- fields -->
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="formFieldGroup" maxOccurs="unbounded"/>
			</xs:sequence>
			<!-- buttons -->

			<xs:element name="footer" minOccurs="0" maxOccurs="unbounded" type="formHeaderFooterType"/>

		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="optional"/>
		<xs:attribute name="datasource" type="xs:string" use="optional"/>
		<xs:attribute name="datakey" type="xs:string" use="optional"/>

		<xs:attribute name="view" type="xs:boolean" use="optional"/>
		<xs:attribute name="edit" type="xs:boolean" use="optional"/>
		<xs:attribute name="add" type="xs:boolean" use="optional"/>

	</xs:complexType>

	<xs:complexType name="formHeaderFooterType">
		<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
		<xs:attribute name="view" type="xs:boolean" use="optional"/>
		<xs:attribute name="add" type="xs:boolean" use="optional"/>
		<xs:attribute name="edit" type="xs:boolean" use="optional"/>
		<xs:attribute name="theme" type="xs:string" use="optional"/>		
	</xs:complexType>

	<xs:group name="listFieldEditor">
		<xs:choice>
			<xs:group ref="formFieldEditorGroup"/>
		</xs:choice>
	</xs:group>

	<xs:complexType name="listStylesType">
		<xs:sequence minOccurs="0">
			<xs:element name="listtable" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="class" use="optional" type="xs:string"/>
					<xs:attribute name="headerclass" use="optional" type="xs:string"/>
					<xs:attribute name="customcellclass" use="optional" type="xs:string"/>
					<xs:attribute name="pagercellclass" use="optional" type="xs:string"/>
					<xs:attribute name="pagerrowclass" use="optional" type="xs:string"/>
					<xs:attribute name="groupcellclass" use="optional" type="xs:string"/>
					<xs:attribute name="cellclass" use="optional" type="xs:string"/>
					<xs:attribute name="selected-count-cell-class" use="optional" type="xs:string"/>
					<xs:attribute name="selected-count-container-class" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="filter" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="class" use="optional" type="xs:string"/>
					<xs:attribute name="fieldclass" use="optional" type="xs:string"/>					
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="baseListType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="styles" type="listStylesType" minOccurs="0" maxOccurs="1"/>		
			
			<xs:element name="datasource" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="1">
						<xs:group ref="datasourceGroup" maxOccurs="1"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="insertdataitem" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
				</xs:complexType>				
			</xs:element>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="baseListElemsGroup"/>
			</xs:sequence>
		</xs:sequence>
		<xs:attribute name="edit" type="xs:boolean" use="optional"/>
		<xs:attribute name="add" type="xs:boolean" use="optional"/>
		<xs:attribute name="headers" type="xs:boolean" use="optional"/>
		<xs:attribute name="datasource" type="xs:string" use="optional"/>
		<xs:attribute name="datakey" type="xs:string" use="optional"/>
		<xs:attribute name="name" type="xs:string" use="optional"/>
	</xs:complexType>

	<xs:simpleType name="sortDirectionType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="asc"/>
			<xs:enumeration value="desc"/>
		</xs:restriction>  
	</xs:simpleType>

	<xs:group name="baseListElemsGroup">
		<xs:choice>
			<xs:element name="addrow" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="visible" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="position" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="top"/>
								<xs:enumeration value="bottom"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		
			<xs:element name="pager" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="template" type="xs:string" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute name="allow" use="optional" type="xs:boolean"/>
					<xs:attribute name="pagesize" use="optional" type="xs:integer"/>
					<xs:attribute name="show" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="always"/>
								<xs:enumeration value="ifpagingpossible"/>
								<xs:enumeration value="no"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="sort" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="field" use="required" type="xs:string"/>
					<xs:attribute name="direction" use="optional" type="sortDirectionType"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="emptydata" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="show" use="optional" type="xs:boolean"/>
					<xs:attribute name="message" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="group" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:choice minOccurs="0" maxOccurs="1">
						<xs:element name="renderer" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:choice>
					<xs:attribute name="field" use="required" type="xs:string"/>
					<xs:attribute name="direction" use="optional" type="sortDirectionType"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="filter" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="header" minOccurs="0">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="field" type="formFieldType" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element name="footer" minOccurs="0">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<!-- actions -->
			<xs:element name="action" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="unbounded">
						<xs:group ref="actionOperationGroup"/>
					</xs:sequence>
					<xs:attribute name="name" use="required" type="listActionNameType"/>
				</xs:complexType>
			</xs:element>
			<!-- fields -->
			<xs:element name="field" minOccurs="0" maxOccurs="unbounded" >
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="formFieldType">
							<xs:sequence minOccurs="0" maxOccurs="1">
								<xs:element name="visible" minOccurs="0" maxOccurs="1">
									<xs:complexType>
										<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
							<xs:attribute name="view" type="xs:boolean" use="optional"/>
							<xs:attribute name="edit" type="xs:boolean" use="optional"/>
							<xs:attribute name="add" type="xs:boolean" use="optional"/>

							<xs:attribute name="sort" type="xs:boolean" use="optional"/>
							<xs:attribute name="width" type="xs:string" use="optional"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			
			<xs:element name="footer" minOccurs="0" maxOccurs="unbounded" >
				<xs:complexType>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element name="row">
							<xs:complexType>
								<xs:sequence minOccurs="0" maxOccurs="unbounded">
									<xs:element name="cell">
										<xs:complexType>
											<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
											<xs:attribute name="colspan" type="xs:int" use="optional"/>
											<xs:attribute name="rowspan" type="xs:int" use="optional"/>
											<xs:attribute name="align" use="optional">
												<xs:simpleType>
													<xs:restriction base="xs:string">
														<xs:enumeration value="left"/>
														<xs:enumeration value="center"/>
														<xs:enumeration value="right"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="renderer">
							<xs:complexType>
								<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
							</xs:complexType>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>

			<xs:element name="operations" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:group ref="aspnetRendererGroup" minOccurs="0" maxOccurs="unbounded"/>
					<xs:attribute name="showselectedcount" type="xs:boolean" use="optional"/>
					<xs:attribute name="top" type="xs:boolean" use="optional"/>
					<xs:attribute name="bottom" type="xs:boolean" use="optional"/>
				</xs:complexType>
			</xs:element>
			
		</xs:choice>		
	</xs:group>

	<xs:simpleType name="checkBoxTreeCheckActionTypeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="check"/>
			<xs:enumeration value="uncheck"/>
			<xs:enumeration value="none"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:complexType name="expressionDictionaryType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="entry">
				<xs:complexType>
					<xs:group ref="expressionGroup" minOccurs="1" maxOccurs="1"/>
					<xs:attribute name="key" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="formStylesType">
		<xs:sequence minOccurs="0">
			<xs:element name="table" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="class" use="optional" type="xs:string"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
		
	

</xs:schema>
